import android.content.Context;
import android.content.Intent;
import android.net.Uri;
import android.os.Environment;
import android.os.StrictMode;
import android.webkit.MimeTypeMap;

import java.io.File;
import java.util.List;

import ru.anthony_kharin.dailyplanner.contracts.FileContract;
import ru.anthony_kharin.dailyplanner.entity.ExtraFile;

public class FileViewPresenter implements FileContract.Presenter {

    private static final String PATH = Environment.getExternalStorageDirectory() + "/DailyPlanner/";

    private List<ExtraFile> files;
    private Context context;

/*
    public FileViewPresenter(Context context, List<ExtraFile> files) {
        this.context = context;
        this.files = files;

        //Простейший способ открыть файлы
        StrictMode.VmPolicy.Builder builder = new StrictMode.VmPolicy.Builder();
        StrictMode.setVmPolicy(builder.build());
    }
*/
    @Override
    public void onBindFileRowViewAtPosition(int position, FileContract.RowView rowView) {
        ExtraFile file = files.get(position);

        rowView.setName(file.getName());

        rowView.getItemView().setOnClickListener(v -> {
            File temp_file = new File(PATH + file.getName());

            //Получаем URI и Mime для установки в намерение
            Uri uri = Uri.fromFile(temp_file);
            String type = getMimeType(temp_file.getAbsolutePath());
            //Запускаем просмотр файла, если его можно открыть
            try {
                Intent intent = new Intent();
                intent.setAction(Intent.ACTION_VIEW);
                intent.setDataAndType(uri, type);
                context.startActivity(intent);
            } catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    private String getMimeType(String url) {
        String type = null;
        try {
            String parts[] = url.split("\\.");
            String extension = parts[parts.length - 1];
            if (extension != null) {
                MimeTypeMap mime = MimeTypeMap.getSingleton();
                type = mime.getMimeTypeFromExtension(extension);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return type;
    }

    @Override
    public int getFilesCount() {
        return files.size();
    }

    @Override
    public void detachContext() {
        context = null;
    }
}

a()
b(c())
d(e(), f())
g(h(), i(k))
l(m, n)